# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Symfony

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  tests-with-docker:
    runs-on: ubuntu-latest

    services:
      db:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: toor
          MYSQL_DATABASE: myprojects
          MYSQL_USER: mn_root
          MYSQL_PASSWORD: mn_toor
        ports:
          - 3306:3306

      web:
        build:
          context: .
          dockerfile: Dockerfile
        ports:
          - 80:80
        volumes:
          - .:/var/www/html
          # - /var/www/html/vendor # Ignore vendor map
        depends_on:
          - db
          - rabbitmq
          - minio
          - redis
        environment:
          - NODE_VERSION=16
          - SYMFONY_ENV=dev

      rabbitmq:
        image: rabbitmq:3-management
        ports:
          - 15672:15672
          - 5672:5672

      elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.17.10
        environment:
          - cluster.name=docker-cluster
          - bootstrap.memory_lock=true
          - discovery.type=single-node
          - "ES_JAVA_OPTS=-Xms512m -Xmx512m" # 512mo HEAP
        ulimits:
          memlock:
            soft: -1
            hard: -1
        ports:
          - 9200:9200

      redis:
        image: redis:7.2-rc2-alpine
        ports:
          - 6379:6379

      # minio:
      #   image: minio/minio:latest
      #   command: server /data
      #   ports:
      #     - 9000:9000
      #   environment:
      #     MINIO_ROOT_USER: minio_root
      #     MINIO_ROOT_PASSWORD: minio_toor
      #   volumes:
      #     - minio_data:/data

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-docker@v3

      - name: Build and run Docker containers
        run: docker-compose up -d

      - name: Wait for services to start
        run: |
          sleep 15 # Adjust the sleep duration as needed

      - name: Run tests
        run: |
          docker-compose exec web bin/phpunit